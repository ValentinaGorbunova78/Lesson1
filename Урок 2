1.
Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя,
а указать явно, в программе.

my_list = [1, None, -100, 'False', True, 25.5]
def my_type(el):
    for el in range(len(my_list)):
        print(type(my_list[el]))
    return
my_type(my_list)

2.
Для списка реализовать обмен значений соседних элементов, т.е.
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить
на своем месте.
Для заполнения списка элементов необходимо использовать
функцию input().

el_spiska = int(input("Введите количество элементов списка "))
my_spisok = []
i = 0
el = 0
while i < el_ spiska:
    my_spisok.append(input("Введите следующее значение списка "))
    i += 1


for elem in range(int(len(my_spisok)/2)):
        my_spisok[el], my_spisok[el + 1] = my_spisok[el + 1], my_spisok[el]
        el += 2
end
print(my_spisok)

3.
Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить к какому времени года относится месяц (зима, весна,
лето, осень).
Напишите решения через list и через dict.
vremya_list = ['winter', 'spring', 'summer', 'autumn']
vremya_dict = {1 : 'winter', 2 : 'spring', 3 : 'summer', 4 : 'autumn'}
month = int(input("Введите месяц по номеру "))
if month ==1 or month == 12 or month == 2:
        print(vremya_dict.get(1))
        print(vremya_list[0])
elif month == 3 or month == 4 or month ==5:
    print(vremya_dict.get(2))
    print(vremya_list[1])
elif month == 6 or month == 7 or month == 8:
    print(vremya_dict.get(3))
    print(vremya_list[2])


elif month == 9 or month == 10 or month == 11:
    print(vremya_dict.get(4))
    print(vremya_list[3])
else:
        print("Такого месяца не существует") 

4.
Пользователь вводит строку из нескольких слов, разделённых
пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если в слово длинное,
выводить только первые 10 букв в слове.
'''
my_stroka = input("введите строку")
my_slovo = []
num = 1
for el in range(my_stroka.count(' ') + 1):
    my_slovo = my_stroka.split()
    if len(str(my_slovo)) <= 10:
        print(f" {num} {my_slovo [el]}")
        num += 1
    else:
        print(f" {num} {my_slovo [el] [0:10]}")
        num += 1

5.
Реализовать структуру «Рейтинг», представляющую собой
не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться
после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.

Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, 
например, my_list = [7, 5, 3, 3, 2].
'''
my_list = [7, 5, 3, 3, 2]
print(f"Рейтинг - {my_list}")
chislo = int(input("Введите число (111 - выход) "))
while chislo != 111:
    for el in range(len(my_list)):
        if my_list[el] == chislo:
            my_list.insert(el + 1, chislo)
            break
        elif my_list[0] < chislo:
            my_list.insert(0, chislo)
        elif my_list[-1] > chislo:
            my_list.append(chislo)
        elif my_list[el] > digit and my_list[el + 1] < chislo:
            my_list.insert(el + 1, chislo)
    print(f"текущий список - {my_list}")
    chislo = int(input("Введите число "))

